// Code generated by MockGen. DO NOT EDIT.
// Source: core/validator.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	entity "github.com/codefluence-x/altair/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockApplicationValidator is a mock of ApplicationValidator interface
type MockApplicationValidator struct {
	ctrl     *gomock.Controller
	recorder *MockApplicationValidatorMockRecorder
}

// MockApplicationValidatorMockRecorder is the mock recorder for MockApplicationValidator
type MockApplicationValidatorMockRecorder struct {
	mock *MockApplicationValidator
}

// NewMockApplicationValidator creates a new mock instance
func NewMockApplicationValidator(ctrl *gomock.Controller) *MockApplicationValidator {
	mock := &MockApplicationValidator{ctrl: ctrl}
	mock.recorder = &MockApplicationValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApplicationValidator) EXPECT() *MockApplicationValidatorMockRecorder {
	return m.recorder
}

// ValidateCreate mocks base method
func (m *MockApplicationValidator) ValidateCreate(ctx context.Context, data entity.OauthApplicationJSON) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ValidateCreate", ctx, data)
}

// ValidateCreate indicates an expected call of ValidateCreate
func (mr *MockApplicationValidatorMockRecorder) ValidateCreate(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateCreate", reflect.TypeOf((*MockApplicationValidator)(nil).ValidateCreate), ctx, data)
}
